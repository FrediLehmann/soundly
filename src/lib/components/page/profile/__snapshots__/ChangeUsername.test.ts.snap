// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ChangeUsername /> component renders correctly 1`] = `
ChangeUsername {
  "$$": Object {
    "after_update": Array [],
    "before_update": Array [],
    "bound": Object {},
    "callbacks": Object {},
    "context": Map {},
    "ctx": Array [
      "",
      Flyin {
        "$$": Object {
          "after_update": Array [],
          "before_update": Array [],
          "bound": Object {},
          "callbacks": Object {},
          "context": Map {},
          "ctx": Array [
            false,
            undefined,
            undefined,
            [Function],
            [Function],
          ],
          "dirty": Array [
            -1,
          ],
          "fragment": Object {
            "c": [Function],
            "d": [Function],
            "i": [Function],
            "l": [Function],
            "m": [Function],
            "o": [Function],
            "p": [Function],
          },
          "not_equal": [Function],
          "on_destroy": Array [],
          "on_disconnect": Array [],
          "on_mount": Array [],
          "props": Object {
            "show": 4,
          },
          "root": <div>
            <section
              class="svelte-1sz96f6"
            >
              <h2
                class="svelte-1sz96f6"
              >
                Username
              </h2>
               
              <p>
                Your username is 
                <b>
                  public
                </b>
                , it will be displayed in various places on
    our platform. It is 
                <b>
                  unique
                </b>
                , no two user on the platform can use the
    same username. You can change your username whenever you want as long as the
    new one is not yet taken.
              </p>
               
              <div
                class="input svelte-1sz96f6"
              >
                <div
                  class="container svelte-1ulq3bj"
                  data-required="true"
                  data-sr-only="true"
                >
                  <label
                    class="svelte-1ulq3bj"
                    for="username"
                  >
                    Username
                  </label>
                   
                  <input
                    class="svelte-1ulq3bj"
                    id="username"
                    required=""
                    type="text"
                  />
                   
                </div>
              </div>
               
              <button
                class="svelte-1dsjpe6"
                data-type="secondary"
                type="button"
              >
                Change
              </button>
              
            </section>
             
            
          </div>,
          "skip_bound": false,
          "update": [Function],
        },
        "$capture_state": [Function],
        "$inject_state": [Function],
      },
      "",
      [Function],
      [Function],
      [Function],
    ],
    "dirty": Array [
      -1,
    ],
    "fragment": Object {
      "c": [Function],
      "d": [Function],
      "i": [Function],
      "l": [Function],
      "m": [Function],
      "o": [Function],
      "p": [Function],
    },
    "not_equal": [Function],
    "on_destroy": Array [
      [Function],
    ],
    "on_disconnect": Array [],
    "on_mount": Array [],
    "props": Object {
      "username": 0,
    },
    "root": <div>
      <section
        class="svelte-1sz96f6"
      >
        <h2
          class="svelte-1sz96f6"
        >
          Username
        </h2>
         
        <p>
          Your username is 
          <b>
            public
          </b>
          , it will be displayed in various places on
    our platform. It is 
          <b>
            unique
          </b>
          , no two user on the platform can use the
    same username. You can change your username whenever you want as long as the
    new one is not yet taken.
        </p>
         
        <div
          class="input svelte-1sz96f6"
        >
          <div
            class="container svelte-1ulq3bj"
            data-required="true"
            data-sr-only="true"
          >
            <label
              class="svelte-1ulq3bj"
              for="username"
            >
              Username
            </label>
             
            <input
              class="svelte-1ulq3bj"
              id="username"
              required=""
              type="text"
            />
             
          </div>
        </div>
         
        <button
          class="svelte-1dsjpe6"
          data-type="secondary"
          type="button"
        >
          Change
        </button>
        
      </section>
       
      
    </div>,
    "skip_bound": false,
    "update": [Function],
  },
  "$$set": [Function],
  "$capture_state": [Function],
  "$inject_state": [Function],
}
`;
